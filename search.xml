<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>本地化存储技术-IndexedDB｜localForage</title>
      <link href="/2024/11/18/article1/"/>
      <url>/2024/11/18/article1/</url>
      
        <content type="html"><![CDATA[<p> <strong>前言：</strong><br>LocalStorage是浏览器存储轻量数据的一个方式，平常在本地化存储时可能会使用到，但在使用过程中会发现localStorage存在以下问题：</p><ul><li><strong>存储量小，卡顿问题</strong>： 通常限制在 5MB 左右（具体取决于浏览器），如果字符串过长，会存不下导致卡死，存储内容多会消耗内存空间</li><li><strong>存取不方便：</strong>  针对非字符串：存储需要序列化为，取值时反序列化，操作 不方便</li><li><strong>Key-value混乱</strong></li></ul><p><strong>LocalStorage 的适用场景</strong></p><ol><li>用户首选项（如暗黑模式、语言设置）</li><li>缓存简单的数据（如表单草稿）</li><li>轻量级的离线功能支持</li></ol><br/><p>对于更复杂的场景（如需要存储大量数据或支持异步操作），推荐使用 IndexedDB 或封装库 localForage：</p><h1 id="IndexedDB"><a href="#IndexedDB" class="headerlink" title="IndexedDB"></a>IndexedDB</h1><p>IndexedDB 是一个基于 JS 的面向对象数据库。<br>允许存储和检索用键索引的对象；可以存储结构化克隆算法支持的任何对象。</p><p> <strong>优点</strong></p><ul><li><strong>存储大</strong>：支持存储大量结构化数据</li><li><strong>灵活性</strong>：支持复杂的查询、键索引、多种数据类型等</li><li><strong>异步存取</strong>  IndexedDB 的读取和存储都是异步的，不会阻塞浏览器进程</li></ul><p><strong>缺点：</strong></p><ul><li>复杂性：使用起来相对复杂，学习成本高</li></ul><br><p>学习成本太高怎么办？<br>不慌，早就有大佬为我们封装好了，主角登场～</p><h1 id="封装IndexedDB：localForage"><a href="#封装IndexedDB：localForage" class="headerlink" title="封装IndexedDB：localForage"></a>封装IndexedDB：localForage</h1><p><strong>localForage</strong> 是一个封装库，简化了 IndexedDB 的使用，同时还提供了对其他存储机制（如 LocalStorage 和 WebSQL）的统一接口。</p><p>地址：</p><blockquote><p><a href="https://github.com/localForage/localForage">https://github.com/localForage/localForage</a></p></blockquote><p>文档：</p><blockquote><p><a href="https://localforage.github.io/localForage/">https://localforage.github.io/localForage/</a><br><a href="https://localforage.docschina.org/">https://localforage.docschina.org/</a>（中文）</p></blockquote><h2 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h2><ul><li><strong>统一 API</strong>：无论底层使用 IndexedDB、LocalStorage 或 WebSQL，API 始终保持一致。</li><li><strong>自动降级</strong>：localForage 有一个优雅降级策略，若浏览器不支持 IndexedDB 或 WebSQL， 则使用localStorage。</li><li><strong>异步操作：</strong> 基于 Promise 的异步接口，避免了回调地狱。</li></ul><p>目前在所有主流浏览器中都可用：Chrome, Firefox, IE 和 Safari（包括 Safari Mobile)</p><h2 id="CRUD使用"><a href="#CRUD使用" class="headerlink" title="CRUD使用"></a>CRUD使用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">localforage.setItem(&quot;key&quot;, &#123; id: 1, name: &quot;item1&quot; &#125;).then((value) =&gt; &#123;</span><br><span class="line">  console.log(&quot;Stored value:&quot;, value);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>更多详情使用可以看文档</p></blockquote><ol><li>创建一个 indexedDB</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> myIndexedDB = localforage.<span class="title function_">createInstance</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;myIndexedDB&#x27;</span>,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="2"><li>存值</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myIndexedDB.<span class="title function_">setItem</span>(key, value)</span><br></pre></td></tr></table></figure><ol start="3"><li>取值<br>indexedDB存取是异步的，建议使用 promise.then() 或 async&#x2F;await 去读值</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">myIndexedDB.<span class="title function_">getItem</span>(<span class="string">&#x27;somekey&#x27;</span>).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">value</span>) &#123;</span><br><span class="line">  <span class="comment">// we got our value</span></span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="keyword">function</span> (<span class="params">err</span>) &#123;</span><br><span class="line">  <span class="comment">// we got an error</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> value = <span class="keyword">await</span> myIndexedDB.<span class="title function_">getItem</span>(<span class="string">&#x27;somekey&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>删除某项</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myIndexedDB.<span class="title function_">removeItem</span>(<span class="string">&#x27;somekey&#x27;</span>)</span><br></pre></td></tr></table></figure><ol start="5"><li>重置数据库</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myIndexedDB.<span class="title function_">clear</span>()</span><br></pre></td></tr></table></figure><h2 id="多实例"><a href="#多实例" class="headerlink" title="多实例"></a>多实例</h2><p>在有多个模块需要使用本地村粗使，可以分模块创建多个实例。<br>例如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eryaDB</span>: localforage.<span class="title function_">createInstance</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;eryaDB&#x27;</span>,</span><br><span class="line">&#125;),</span><br><span class="line"><span class="attr">csdnDB</span>: localforage.<span class="title function_">createInstance</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;csdnDB&#x27;</span>,</span><br><span class="line">&#125;),</span><br></pre></td></tr></table></figure><p>可以分别作为一个State，在页面中分别直接调取使用</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
